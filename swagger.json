{
    "openapi": "3.0.0",
    "info": {
        "description": "API for Caloriette",
        "version": "1.0.0",
        "title": "Caloriette Service"
    },
    "paths": {
        "/users": {
            "get": {
                "summary": "Get All Users",
                "operationId": "getUsers",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "number",
                            "minimum": 1
                        },
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get All Users Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAllUsersResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input"
                    },
                    "401": {
                        "description": "Not authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "default": {
                        "description": "General server error"
                    }
                },
                "tags": [
                    "caloriette"
                ]
            },
            "post": {
                "summary": "SignUp a User",
                "operationId": "signupUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignupUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "SignUp User Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SignupUserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input"
                    },
                    "401": {
                        "description": "Not authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "default": {
                        "description": "General server error"
                    }
                },
                "tags": [
                    "caloriette"
                ]
            }
        },
        "/users/login": {
            "post": {
                "summary": "Login a User",
                "operationId": "loginUser",
                "responses": {
                    "200": {
                        "description": "Login a User Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginUserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input"
                    },
                    "401": {
                        "description": "Not authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "default": {
                        "description": "General server error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginUserRequest"
                            }
                        }
                    }
                },
                "tags": [
                    "caloriette"
                ]
            }
        },
        "/users/{email}": {
            "get": {
                "summary": "Get a User",
                "operationId": "getUser",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "email",
                        "schema": {
                            "type": "string",
                            "description": "Email of the User"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a Users Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input"
                    },
                    "401": {
                        "description": "Not authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "default": {
                        "description": "General server error"
                    }
                },
                "tags": [
                    "caloriette"
                ]
            },
            "put": {
                "summary": "Update a User",
                "operationId": "updateUser",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "email",
                        "schema": {
                            "type": "string",
                            "description": "Email of the User"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update a Users Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateUserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input"
                    },
                    "401": {
                        "description": "Not authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "default": {
                        "description": "General server error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserResponse"
                            }
                        }
                    }
                },
                "tags": [
                    "caloriette"
                ]
            },
            "delete": {
                "summary": "Delete a User",
                "operationId": "deleteUser",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "email",
                        "schema": {
                            "type": "string",
                            "description": "Email of the User"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete a Users Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteUserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input"
                    },
                    "401": {
                        "description": "Not authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "default": {
                        "description": "General server error"
                    }
                },
                "tags": [
                    "caloriette"
                ]
            }
        },
        "/records": {
            "get": {
                "summary": "Get All Records",
                "operationId": "getRecords",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "number",
                            "minimum": 1
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "userEmail",
                        "schema": {
                            "type": "string",
                            "description": "Email of the User"
                        },
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get All Records Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAllRecordsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input"
                    },
                    "401": {
                        "description": "Not authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "default": {
                        "description": "General server error"
                    }
                },
                "tags": [
                    "caloriette"
                ]
            },
            "post": {
                "summary": "Create a Record",
                "operationId": "createRecord",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRecordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create a Record Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateRecordResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input"
                    },
                    "401": {
                        "description": "Not authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "default": {
                        "description": "General server error"
                    }
                },
                "tags": [
                    "caloriette"
                ]
            }
        },
        "/records/{id}": {
            "get": {
                "summary": "Get a Record",
                "operationId": "getRecord",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "description": "Id of the Record"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a Record Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetRecordResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input"
                    },
                    "401": {
                        "description": "Not authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "default": {
                        "description": "General server error"
                    }
                },
                "tags": [
                    "caloriette"
                ]
            },
            "delete": {
                "summary": "Delete a Record",
                "operationId": "deleteRecord",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "description": "Id of the Record"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete a Record Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteRecordResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input"
                    },
                    "401": {
                        "description": "Not authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "default": {
                        "description": "General server error"
                    }
                },
                "tags": [
                    "caloriette"
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        },
        "schemas": {
            "CreateRecordRequest": {
                "type": "object",
                "properties": {
                    "userEmail": {
                        "type": "string",
                        "description": "Email of the User",
                        "maxLength": 100,
                        "minLength": 0,
                        "pattern": "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])"
                    },
                    "date": {
                        "type": "string",
                        "description": "Date of the Record",
                        "minLength": 10,
                        "maxLength": 10
                    },
                    "time": {
                        "type": "string",
                        "description": "Time of the Record",
                        "minLength": 8,
                        "maxLength": 8
                    },
                    "text": {
                        "type": "string"
                    },
                    "numberOfCalories": {
                        "type": "number",
                        "description": "Number of calories for the whole record"
                    }
                },
                "required": [
                    "userEmail",
                    "date",
                    "time",
                    "text"
                ]
            },
            "CreateRecordResponse": {
                "type": "object",
                "properties": {
                    "done": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "done",
                    "id"
                ]
            },
            "DeleteRecordRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the Record",
                        "format": "uuid"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "DeleteRecordResponse": {
                "type": "object",
                "properties": {
                    "done": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "done"
                ]
            },
            "DeleteUserRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Name of the User"
                    }
                },
                "required": [
                    "email"
                ]
            },
            "DeleteUserResponse": {
                "type": "object",
                "properties": {
                    "done": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "done"
                ]
            },
            "GetAllRecordsRequest": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "number",
                        "minimum": 1
                    },
                    "userEmail": {
                        "type": "string",
                        "description": "Email of the User",
                        "maxLength": 100,
                        "minLength": 0,
                        "pattern": "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])"
                    }
                }
            },
            "GetAllRecordsResponse": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "Id of the Record",
                            "format": "uuid"
                        },
                        "userEmail": {
                            "type": "string",
                            "description": "Email of the User",
                            "maxLength": 100,
                            "minLength": 0,
                            "pattern": "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])"
                        },
                        "date": {
                            "type": "string",
                            "description": "Date of the Record",
                            "minLength": 10,
                            "maxLength": 10
                        },
                        "time": {
                            "type": "string",
                            "description": "Time of the Record",
                            "minLength": 8,
                            "maxLength": 8
                        },
                        "text": {
                            "type": "string"
                        },
                        "numberOfCalories": {
                            "type": "number",
                            "description": "Number of calories for the whole record"
                        },
                        "lessThanExpectedCalories": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "id",
                        "userEmail",
                        "date",
                        "time",
                        "text",
                        "numberOfCalories",
                        "lessThanExpectedCalories"
                    ]
                }
            },
            "GetAllUsersRequest": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "number",
                        "minimum": 1
                    }
                }
            },
            "GetAllUsersResponse": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string",
                            "description": "Email of the User",
                            "maxLength": 100,
                            "minLength": 0,
                            "pattern": "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the User",
                            "minLength": 3,
                            "maxLength": 30
                        },
                        "surname": {
                            "type": "string",
                            "description": "Surname of the User",
                            "minLength": 3,
                            "maxLength": 100
                        },
                        "expectedCaloriesPerDay": {
                            "type": "number",
                            "description": "Expected daily intake of calories per day for the User"
                        }
                    },
                    "required": [
                        "email",
                        "surname",
                        "expectedCaloriesPerDay",
                        "name"
                    ]
                }
            },
            "GetRecordRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the Record"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "GetRecordResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the Record",
                        "format": "uuid"
                    },
                    "userEmail": {
                        "type": "string",
                        "description": "Email of the User",
                        "maxLength": 100,
                        "minLength": 0,
                        "pattern": "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])"
                    },
                    "date": {
                        "type": "string",
                        "description": "Date of the Record",
                        "minLength": 10,
                        "maxLength": 10
                    },
                    "time": {
                        "type": "string",
                        "description": "Time of the Record",
                        "minLength": 8,
                        "maxLength": 8
                    },
                    "text": {
                        "type": "string"
                    },
                    "numberOfCalories": {
                        "type": "number",
                        "description": "Number of calories for the whole record"
                    },
                    "lessThanExpectedCalories": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "userEmail",
                    "date",
                    "time",
                    "text",
                    "numberOfCalories",
                    "lessThanExpectedCalories"
                ]
            },
            "GetUserRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Name of the User"
                    }
                },
                "required": [
                    "email"
                ]
            },
            "GetUserResponse": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email of the User",
                        "maxLength": 100,
                        "minLength": 0,
                        "pattern": "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the User",
                        "minLength": 3,
                        "maxLength": 30
                    },
                    "surname": {
                        "type": "string",
                        "description": "Surname of the User",
                        "minLength": 3,
                        "maxLength": 100
                    },
                    "expectedCaloriesPerDay": {
                        "type": "number",
                        "description": "Expected daily intake of calories per day for the User"
                    }
                },
                "required": [
                    "email",
                    "surname",
                    "expectedCaloriesPerDay",
                    "name"
                ]
            },
            "LoginUserRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Name of the User"
                    },
                    "password": {
                        "type": "string",
                        "description": "Surname of the User"
                    }
                },
                "required": [
                    "email",
                    "password"
                ]
            },
            "LoginUserResponse": {
                "type": "object",
                "properties": {
                    "done": {
                        "type": "boolean"
                    },
                    "accessToken": {
                        "type": "string",
                        "description": "The Access Token for the user"
                    }
                },
                "required": [
                    "done",
                    "accessToken"
                ]
            },
            "SignupUserRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email of the User",
                        "maxLength": 100,
                        "minLength": 0,
                        "pattern": "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the User",
                        "minLength": 3,
                        "maxLength": 30
                    },
                    "surname": {
                        "type": "string",
                        "description": "Surname of the User",
                        "minLength": 3,
                        "maxLength": 100
                    },
                    "expectedCaloriesPerDay": {
                        "type": "number",
                        "description": "Expected daily intake of calories per day for the User"
                    },
                    "password": {
                        "type": "string",
                        "description": "password for loging into the application"
                    }
                },
                "required": [
                    "name",
                    "surname",
                    "expectedCaloriesPerDay",
                    "password",
                    "email"
                ]
            },
            "SignupUserResponse": {
                "type": "object",
                "properties": {
                    "done": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "done"
                ]
            },
            "UpdateUserRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email of the User",
                        "maxLength": 100,
                        "minLength": 0,
                        "pattern": "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the User",
                        "minLength": 3,
                        "maxLength": 30
                    },
                    "surname": {
                        "type": "string",
                        "description": "Surname of the User",
                        "minLength": 3,
                        "maxLength": 100
                    },
                    "expectedCaloriesPerDay": {
                        "type": "number",
                        "description": "Expected daily intake of calories per day for the User"
                    },
                    "password": {
                        "type": "string",
                        "description": "password for loging into the application"
                    }
                },
                "required": [
                    "email"
                ]
            },
            "UpdateUserResponse": {
                "type": "object",
                "properties": {
                    "done": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "done"
                ]
            }
        }
    }
}